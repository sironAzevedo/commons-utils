name: commons-utils

on:
  push:
    branches: [ main ]

jobs:
    increment-version:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - name: Set up JDK 17
          uses: actions/setup-java@v4
          with:
            distribution: 'temurin'
            java-version: 17
        - name: Get GitHub Packages versions count
          id: versions_count
          run: |
            REPO="sironAzevedo/commons-utils"
            PACKAGE_NAME="commons-utils"
            AUTH="Authorization: token ${{ secrets.GITHUB_TOKEN }}"
            API_URL="https://api.github.com"
            VERSIONS_COUNT=$(curl -H "$AUTH" "$API_URL/orgs/{owner}/packages/maven/$PACKAGE_NAME/versions" | jq '. | length')
            echo "::set-output name=count::$VERSIONS_COUNT"
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        - name: Increment version
          id: increment_version
          run: |
            # Obter a versão atual da linha 9 do pom.xml
            VERSION=$(sed -n '9p' pom.xml | grep -oP '(?<=<version>).*(?=</version>)')
            # Remover a palavra "SNAPSHOT" da versão
            VERSION_CLEAN=${VERSION/-SNAPSHOT/}
            # Separar a versão em partes
            IFS='.' read -ra ADDR <<< "$VERSION_CLEAN"
            MAJOR=${ADDR[0]}
            MINOR=${ADDR[1]}
            # Usar a contagem de versões para definir a nova versão
            PATCH=${{ steps.versions_count.outputs.count }}
            NEW_VERSION="$MAJOR.$MINOR.$((PATCH + 2))"
            # Atualizar a versão na linha 9 do pom.xml
            sed -i '9s/<version>.*<\/version>/<version>'$NEW_VERSION'<\/version>/' pom.xml
        - name: Save updated pom.xml for next steps
          uses: actions/upload-artifact@v3
          with:
            name: updated-pom
            path: pom.xml

    compile:
        runs-on: ubuntu-latest
        needs: increment-version
        steps:
          - uses: actions/checkout@v4
          - name: Download updated pom.xml
            uses: actions/download-artifact@v3
            with:
              name: updated-pom
              path: ./
          - name: Set up JDK 17
            uses: actions/setup-java@v4
            with:
              distribution: 'temurin'
              java-version: 17
          - name: Cache Maven dependencies
            uses: actions/cache@v3
            with:
              path: ~/.m2/repository
              key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
              restore-keys: |
                ${{ runner.os }}-maven-
          - name: Build & Compile project
            run: mvn clean compile install -DskipTests

    test:
        runs-on: ubuntu-latest
        needs: compile
        steps:
          - uses: actions/checkout@v4
          - name: Download updated pom.xml
            uses: actions/download-artifact@v3
            with:
              name: updated-pom
              path: ./
          - name: Set up JDK 17
            uses: actions/setup-java@v4
            with:
              distribution: 'temurin'
              java-version: 17
          - name: Cache Maven dependencies
            uses: actions/cache@v3
            with:
              path: ~/.m2/repository
              key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
              restore-keys: |
                ${{ runner.os }}-maven-
          - name: Run unit tests
            run: mvn test

    publish:
      runs-on: ubuntu-latest
      needs: test
      permissions:
        contents: read
        packages: write
      steps:
        - uses: actions/checkout@v4
        - name: Download updated pom.xml
          uses: actions/download-artifact@v3
          with:
            name: updated-pom
            path: ./
        - name: Set up JDK 17
          uses: actions/setup-java@v4
          with:
            distribution: 'temurin'
            java-version: 17
        - name: Configure Maven settings
          run: |
            mkdir -p ~/.m2
            echo "<settings><servers><server><id>github</id><username>\${env.GITHUB_ACTOR}</username><password>\${env.GITHUB_TOKEN}</password></server></servers></settings>" > ~/.m2/settings.xml
          env:
            GITHUB_ACTOR: ${{ github.actor }}
            GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        - name: Cache Maven dependencies
          uses: actions/cache@v3
          with:
            path: ~/.m2/repository
            key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
            restore-keys: |
              ${{ runner.os }}-maven-
        - name: Publish package
          run: mvn --batch-mode deploy
          env:
            GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}