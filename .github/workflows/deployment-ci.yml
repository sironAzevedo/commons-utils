name: [FEAT] Build & PR

on:
  workflow_call:
    inputs:
      java-version:
        required: true
        type: string
        default: '17'
      GITHUB_TOKEN:
        description: 'GitHub token'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ inputs.java-version }}
      - name: Configure Maven settings
        run: |
          mkdir -p ~/.m2
          echo "<settings><servers><server><id>github</id><username>\${env.GITHUB_ACTOR}</username><password>\${env.GITHUB_TOKEN}</password></server></servers></settings>" > ~/.m2/settings.xml
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build with Maven
        run: mvn clean install -DskipTests
        env:
          GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}

  # test:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   name: Running tests
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Set up JDK
  #       uses: actions/setup-java@v4
  #       with:
  #         distribution: 'temurin'
  #         java-version: ${{ inputs.java-version }}
  #     - name: Configure Maven settings
  #       run: |
  #         mkdir -p ~/.m2
  #         echo "<settings><servers><server><id>github</id><username>\${env.GITHUB_ACTOR}</username><password>\${env.GITHUB_TOKEN}</password></server></servers></settings>" > ~/.m2/settings.xml
  #       env:
  #         GITHUB_ACTOR: ${{ github.actor }}
  #         GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
  #     - name: Cache Maven dependencies
  #       uses: actions/cache@v3
  #       with:
  #         path: ~/.m2/repository
  #         key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
  #         restore-keys: |
  #           ${{ runner.os }}-maven-
  #     - name: Run unit tests
  #       run: mvn test
  #       env:
  #         GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}

  # create_pr:
  #   runs-on: ubuntu-latest
  #   needs: [build, test]
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Create Pull Request
  #       uses: peter-evans/create-pull-request@v5
  #       with:
  #         token: ${{ inputs.GITHUB_TOKEN }}
  #         commit-message: 'Automatic PR: Merge changes to main'
  #         branch: ${{ github.ref }}
  #         base: main
  #         title: 'Automatic PR from ${{ github.ref }}'
  #         body: |
  #           Este PR foi criado automaticamente pelo fluxo de trabalho de CI para mesclar alterações de ${{ github.ref }} para main.  